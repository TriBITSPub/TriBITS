#!NEMESIS_PYTHON_DIR
##---------------------------------------------------------------------------##
## Make a new C/C++ header file
##---------------------------------------------------------------------------##

import sys, os, re, time
from nemesis_files import *

##---------------------------------------------------------------------------##
## ARGUMENTS
##---------------------------------------------------------------------------##

environment = Nemesis_Env()
tags        = Tags(environment)

# determine suffix (for C/C++ headers)
suffix = ".hh"

# arguments
option   = ""
for arg in sys.argv:

    if option == "-n":
        option    = ""
        tags.namespace = arg
    elif option == "-f":
        option    = ""
        tags.classname = arg

    if arg == "-n":
        option = "-n"

    if arg == "-f":
        option = "-f"

    if arg == "-c":
        suffix = ".h"

    if arg == "--help":
        print "Make a new nemesis code file."
        print "-c make C header (.h), default is C++ (.hh)"
        print "-n <namespace>"
        print "-f <filename>"
        sys.exit(0)

# exit if no basename
if tags.classname == "":
    sys.exit(1)

##---------------------------------------------------------------------------##
## FILE CONSTRUCTION
##---------------------------------------------------------------------------##

# Header regardless of C/C++
tags.make_file(environment, 
               "template%s" % (suffix), 
               "%s%s" % (tags.classname, suffix)) 
                                                        

# Add <classname>.i.hh for C++
if suffix == ".hh":
    tags.make_file(environment, "template.i.hh", "%s.i.hh" % tags.classname)

##---------------------------------------------------------------------------##
## end of nemesis-header
##---------------------------------------------------------------------------##

