#!NEMESIS_PYTHON_DIR
##---------------------------------------------------------------------------##
## Make a new C++ class set of translation files
##---------------------------------------------------------------------------##

import sys, os, re, time
from nemesis_files import *

##---------------------------------------------------------------------------##
## ARGUMENTS
##---------------------------------------------------------------------------##

environment = Nemesis_Env()
tags        = Tags(environment)

# release files
release = 0

# arguments
option   = ""
for arg in sys.argv:

    if option == "-n":
        option    = ""
        tags.namespace = arg

    if arg == "-n":
        option = "-n"

    if arg == "-r":
        release = 1

    if arg == "--help":
        print "Make a new nemesis-style package."
        print "-n <namespace> defaults to pkg name"
        print "-r include Release.hh(.cc)"
        sys.exit(0)

# build test directory
if not os.path.isdir("test"):
    os.mkdir("test")

# build autodoc directory
if not os.path.isdir("autodoc"):
    os.mkdir("autodoc")

##---------------------------------------------------------------------------##
## FILE CONSTRUCTION
##---------------------------------------------------------------------------##

# New package files
tags.make_file(environment, "configure.package.ac", "configure.ac")
tags.make_file(environment, "config.m4", "config.m4")

# set class to config for config.h construction
tags.classname = "config"
tags.start     = "configure #defines for package %s" % tags.pkg
tags.make_file(environment, "template.h", "config.h.in")

# Build release files
if release == 1:
    tags.make_file(environment, "Release.hh", "Release.hh")
    tags.make_file(environment, "Release.cc", "Release.cc")

# Build test files
tags.tpkg  = "%s/test" % (tags.pkg)
tags.start = ""
tags.make_file(environment, "pkg_Test.hh", "test/%s_test.hh" % tags.spkg)
tags.make_file(environment, "pkg_Test.cc", "test/%s_test.cc" % tags.spkg)
tags.make_file(environment, "Makefile.test", "test/Makefile.target")

# Build autodoc files
tags.start = "%s-#_#_#" % tags.pkg
tags.make_file(environment, "mainpage.dcc", "autodoc/%s.dcc" % tags.spkg)

##---------------------------------------------------------------------------##
## end of nemesis-class
##---------------------------------------------------------------------------##

