name: TriBITS Testing

# Controls when the action will run.
# Triggers the workflow on push or pull request
# for the master and develop branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      max-parallel: 4  # Only limit to 1 for debugging?
      fail-fast: false  # Allow each job to run to completion even if other jobs fail first
      matrix:
        config:
          - { os: ubuntu-latest, cc: gcc-8,  cxx: g++-8,  fc: gfortran-8,  python: "2.7", cmake: "3.17.0", generator: "makefiles" }
          - { os: ubuntu-latest, cc: gcc-10,  cxx: g++-10, fc: gfortran-10, python: "3.8", cmake: "3.17.0", generator: "makefiles" }
          - { os: ubuntu-latest, cc: gcc-11, cxx: g++-11, python: "3.8", cmake: "3.17.0", generator: "ninja" }  # No Fortran
          - { os: ubuntu-latest, cc: gcc-9, cxx: g++-9, fc: gfortran-9, python: "3.8", cmake: "3.21.0", generator: "ninja" }

    runs-on: ${{ matrix.config.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Update OS
        run: |
          sudo apt-get update -y
      - name: Install CMake
        run: |
          wget -O cmake.sh https://github.com/Kitware/CMake/releases/download/v${{ matrix.config.cmake }}/cmake-${{ matrix.config.cmake }}-Linux-x86_64.sh
          sudo sh cmake.sh --skip-license --exclude-subdir --prefix=/usr/local/
      - name: Install packages
        run: |
          sudo apt-get install -y ${{ matrix.config.cc }} ${{ matrix.config.cxx }} ${{ matrix.config.fc }}
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/${{ matrix.config.cc }} 10
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/${{ matrix.config.cxx }} 10
          sudo update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/${{ matrix.config.fc }} 10
          sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 20
          sudo update-alternatives --set cc /usr/bin/gcc
          sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 20
          sudo update-alternatives --set c++ /usr/bin/g++
          sudo update-alternatives --install /usr/bin/fortrann fortrann /usr/bin/gfortran 20
          sudo update-alternatives --set fortrann /usr/bin/gfortran
          sudo apt-get -y install valgrind
          sudo apt-get -y install ninja-build
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.config.python }}
      - name: Version checks
        run: |
          echo "Checking Cmake path and version"
          which cmake
          cmake --version
          echo "Checking gcc path and version"
          which ${{ matrix.config.cc }}
          ${{ matrix.config.cc }} --version
          echo "Checking g++ path and version"
          which ${{ matrix.config.cxx }}
          ${{ matrix.config.cxx }} --version
          if [ "${{ matrix.config.fc }}" = "" ]; then echo "No fortran compiler"; else echo "Checking gfortran path and version" && which ${{ matrix.config.fc }} && ${{ matrix.config.fc }} --version; fi
      - name: Run configure, build, test, and submit to CDash
        run: |
          cd ..
          ./TriBITS/cmake/ctest/github_actions/run_github_actions_ctest_driver.sh \
            --os ${{ matrix.config.os }} \
            --cmake-ver ${{ matrix.config.cmake }} \
            --generator ${{ matrix.config.generator }} \
            --python-ver ${{ matrix.config.python }} \
            --cxx-compiler-and-ver ${{ matrix.config.cxx }} \
            --fortran-compiler-and-ver ${{ matrix.config.fc }}
